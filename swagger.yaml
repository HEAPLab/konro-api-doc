---
openapi: 3.0.0        
info:
  description: This is the API documentation of Konro HTTP interface
  version: 1.0.0
  title: Konro API documentation
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://localhost:7575/
tags:
  - name: app
    description: Everything about integrated applications
  - name: rm
    description: Everything about the resource manager
  - name: coord
    description: Cross-Konro coordination in a distributed setup
  - name: auth
    description: Service commands for authentication
paths:
  /app/register:
    post:
      tags:
        - app
      summary: Register a new application
      description: ''
      operationId: register
      security:
        - auth_id: []
          auth_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/application'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid request.
        '503':
          description: No resources available.
  /app/{app_id}/info:
    get:
      tags:
        - app
      summary: Get information about an application
      description: Returns various information related to an application
      operationId: info
      parameters:
        - name: app_id
          in: path
          description: ID of app to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/application'
        '400':
          description: Invalid ID supplied
        '404':
          description: App not found
  /coord/get_nodes:
    get:
      tags:
        - coord
      summary: Get information about nodes in the cluster
      description: Returns all the nodes known by the host
      operationId: get_nodes
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/node'
  /coord/publish_nodes:
    post:
      tags:
        - coord
      summary: Provide information about Konro nodes to the cluster
      description: ''
      operationId: publish_nodes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/node'
      responses:
        '200':
          description: Successful operation
  /auth/get_challenge/{username}:
    get:
      tags:
        - auth
      summary: Get a challenge for authentication 
      description: Given a username, the host returns an authentication challenge for the client 
      operationId: get_challenge
        - name: username
          in: path
          description: Username for the login
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  challenge:
                    type: string
                  expire_on:
                    type: integer
                    description: UNIX Timestamp
        '404':
          description: Username not found
components:
  schemas:
    application:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        binary_path:
          type: string
    node:
      type: object
      properties:
        hostname:
          type: string
        ipaddr:
          type: string
        status:
          type: integer
          format: int8
        last_seen:
          type: integer
          description: UNIX timestamp                
  securitySchemes:
    auth_token:
      type: apiKey
      in: cookie
      name: AUTH_TOKEN
    auth_id:
      type: apiKey
      in: cookie
      name: AUTH_ID
